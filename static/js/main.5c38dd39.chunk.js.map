{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["configurationOptions","apiConnector","AppSearchAPIConnector","searchKey","engineName","hostIdentifier","alwaysSearchOnInitialLoad","autocompleteQuery","suggestions","types","documents","fields","size","searchQuery","search_fields","title","result_fields","snippet","fallback","type","days_full","number","raw","description","new_reqs_multi","old_reqs_multi","units","mnemonic","facets","ranges","from","to","name","dayofweek","start_time","end_time","instructor","room","instructionmode","App","SearchProvider","config","className","Layout","header","SearchBox","autocompleteSuggestions","bodyContent","Results","titleField","sideContent","Sorting","label","sortOptions","value","direction","Facet","field","filterType","isFilterable","bodyHeader","PagingInfo","ResultsPerPage","bodyFooter","Paging","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c38dd39.chunk.js","sourcesContent":["import React from \"react\";\nimport AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\nimport {\n  PagingInfo,\n  ResultsPerPage,\n  Paging,\n  Facet,\n  SearchProvider,\n  Results,\n  SearchBox,\n  Sorting,\n  BooleanFacet,\n  SingleSelectFacet,\n  SingleLinksFacet\n} from \"@elastic/react-search-ui\";\nimport { Layout } from \"@elastic/react-search-ui-views\";\n\nimport \"@elastic/react-search-ui-views/lib/styles/styles.css\";\n\n\n// Step #2, The Connector\nconst connector = new AppSearchAPIConnector({\n  searchKey: \"search-wovubcsma6jqj1dseq97uyi9\",\n  engineName: \"uva-classes-v5\",\n  hostIdentifier: \"host-fradkb\"\n});\n// Step #3: Configurationnpm \nconst configurationOptions = {\n  apiConnector: connector,\n  alwaysSearchOnInitialLoad: true,\n  // disjunctiveFacets: [\"acres\", \"states\", \"date_established\", \"location\"],\n  autocompleteQuery: {\n    suggestions: {\n      types: {\n        documents: {\n          // Which fields to search for suggestions.\n          fields: [\"title\"]\n        }\n      },\n      // How many suggestions appear.\n      size: 5\n    }\n  },\n  searchQuery: {\n    search_fields: {\n      // 1. Search by name of video game.\n      title: {}\n    },\n\n    result_fields: {\n      title: {\n        // A snippet means that matching search terms will be highlighted via <em> tags.\n        snippet: {\n          size: 75, // Limit the snippet to 75 characters.\n          fallback: true // Fallback to a \"raw\" result.\n        }\n      },\n      type: {\n        snippet: {\n          size: 50,\n          fallback: true\n        }\n      }\n      ,\n      days_full: {\n        snippet: {\n          size: 50,\n          fallback: true\n        }\n      },\n      number: {\n        raw: {}\n      },\n      description: {\n        snippet: {\n          size: 400,\n          fallback: true\n        }\n      },\n      new_reqs_multi: {\n        snippet: {\n          size: 400,\n          fallback: true\n        }\n      },\n      old_reqs_multi: {\n        snippet: {\n          size: 400,\n          fallback: true\n        }\n      },\n      units: {\n        raw: {}\n      },\n      mnemonic: {\n        snippet: {\n          size: 50,\n          fallback: true\n        }\n      }\n    },\n    facets: {\n      units: {\n        type: \"range\",\n        ranges: [\n          { from: 0, to: 1, name: \"1\" },\n          { from: 1, to: 2, name: \"2\" },\n          { from: 2, to: 3, name: \"3\" },\n          { from: 3, to: 4, name: \"4\" }\n        ]\n      },\n      number: {\n        type: \"range\",\n        ranges: [\n          { from: 0, to: 1999, name: \"1000 level\" },\n          { from: 2000, to: 2999, name: \"2000 level\" },\n          { from: 3000, to: 3999, name: \"3000 level\" },\n          { from: 4000, to: 10000, name: \"4000 level and above\" }\n        ]\n      },\n      type: { type: \"value\", size: 100 },\n      days_full: { type: \"value\", size: 100 },\n      mnemonic: { type: \"value\", size: 100 },\n      dayofweek: { type: \"value\", size: 100 },\n      start_time: { type: \"value\", size: 100 },\n      end_time: { type: \"value\", size: 100 },\n      instructor: { type: \"value\", size: 100 },\n      room: { type: \"value\", size: 100 },\n      instructionmode: { type: \"value\", size: 100 },\n      new_reqs_multi: { type: \"value\", size: 100 },\n      old_reqs_multi: { type: \"value\", size: 100 },\n    }\n  }\n};                                                                                                                                                                                                                                                                                                                                                                 \n// Step #4, SearchProvider\nexport default function App() {\n  return (\n    \n    <SearchProvider config={configurationOptions}>\n      <div className=\"App\">\n      <Layout\n  header={<SearchBox autocompleteSuggestions={true} />}\n  bodyContent={<Results titleField=\"title\"  />} // urlField=\"image_url\" />}\n  sideContent={\n    <div>\n      <p3> Notes + todo </p3>\n\n      <ul>\n        <li> Click search to display filters/classes </li>\n        <li> Need custom lists like CS integration electives </li>\n        <li> Add class GPA data, avg professor gpa etc </li>\n        <li> If requirement combination isn't listed, it doesn't exist </li>\n        <li> disjunctive facets = can select multiple checkboxes </li>\n        <li> make drop downs, figure out how to hide results </li>\n        {/* https://codesandbox.io/s/national-parks-example-kdyms?fontsize=14&file=/src/App.js:1176-1232 */}\n      </ul>\n      <Sorting\n        label={\"Sort by\"}\n        sortOptions={[\n          {\n            name: \"Relevance\",\n            value: \"\",\n            direction: \"\"\n          },\n          {\n            name: \"Name\",\n            value: \"title\",\n            direction: \"asc\"\n          }\n        ]}\n      />\n\n      <Facet field=\"type\" label=\"Type\" filterType=\"any\" />\n      <Facet field=\"mnemonic\" label=\"Category\" />\n      <h1>New Requirements</h1> \n      <p1> If combination is not listed, it probably doesn't exist </p1>\n      <Facet field=\"new_reqs_multi\" label=\"Multi-Requirement search\" isFilterable={true} />\n      <h1>Old Requirements</h1> \n      <p1> If combination is not listed, it probably doesn't exist </p1>\n      <Facet field=\"old_reqs_multi\" label=\"Multi-Requirement search\" isFilterable={true} />\n\n      {/* <Facet field=\"days_full\" label=\"DAYZ [days]\" isFilterable={true} /> */}\n      <Facet field=\"dayofweek\" label=\"Day of Week\" />\n      <Facet field=\"start_time\" label=\"Start Time\" />\n      <Facet field=\"end_time\" label=\"End Time\" />\n      <Facet field=\"instructionmode\" label=\"Instruction Mode\" />\n\n      <Facet field=\"instructor\" label=\"Instructor\" isFilterable={true} />\n      <Facet field=\"room\" label=\"Building\" />\n      <Facet field=\"units\" label=\"Credits\" />\n      <Facet field=\"number\" label=\"Course Level\" />\n\n    </div>\n  }\n  bodyHeader={\n    <>\n      <PagingInfo />\n      <ResultsPerPage />\n    </>\n  }\n  bodyFooter={<Paging />}\n/>\n      </div>\n    </SearchProvider>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}